{"version":3,"sources":["components/NavigationBar/Math.png","components/NavigationBar/MainNav.js","components/UI/Title/Title.js","components/UI/Button/Button.js","components/UI/Card/Card.js","components/Modal/Modal.js","components/RandomZone/RandomZone.js","pages/MainPage.js","components/Form/Input/Input.js","components/OurForm.js","pages/ConfigPage.js","data/randomData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainNav","props","className","to","process","alt","src","require","RandomZone","children","onClick","style","btnClass","btnType","Card","Modal","title","description","fakeDB","useState","stateNum","setNumState","stateOpenModal","setOpenModalState","stateIsRandom","setStateIsRandom","randomInt","useCallback","min","max","Math","ceil","random","handleModal","b","btnStyle","msg","text","length","margin","MainPage","Fragment","Input","type","value","onChange","id","inputType","e","placeholder","OurForm","setDummyData","textData","map","d","formState","setStateForm","stateErr","setErrState","stateSubmit","setSubmitState","preventDefault","target","newArr","index","findIndex","c","isValid","updatedData","filter","allData","dt","key","useEffect","display","justifyContent","alignItems","flexDirection","f","i","concat","Date","getTime","onSubmit","newDB","forEach","push","ConfigPage","randomData","App","DUMMY_DATA","useRef","array","current","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e4eec1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Math.19ad2786.png\";","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"./MainNav.css\";\r\n\r\nconst MainNav = (props) => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"main-header__container\">\r\n        <Link to={`${process.env.PUBLIC_URL}/`}>\r\n          <img alt=\"Logo\" src={require(\"./Math.png\")} className=\"main-header__brand\" />\r\n        </Link>\r\n      </div>\r\n      <nav className=\"main-nav\">\r\n        <ul className=\"main-nav__items\">\r\n          <NavLink to={`${process.env.PUBLIC_URL}/setting`}>Setting</NavLink>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNav;\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\n\r\nconst RandomZone = (props) => {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n};\r\n\r\nexport default RandomZone;\r\n","import React from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst RandomZone = (props) => {\r\n  const { onClick, style, btnType } = props;\r\n  let btnClass = \"btn\";\r\n  if (btnType === \"picked\") btnClass = \"btn btn-picked\";\r\n\r\n  return (\r\n    <button className={btnClass} style={{ ...style }} onClick={onClick}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RandomZone;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h1 className=\"class__header\">{props.children}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  const { title, description, onClick } = props;\r\n  return (\r\n    <>\r\n      <div className=\"blackdrop\" onClick={onClick}></div>\r\n      <div className=\"modal\">\r\n        <h1 className=\"modal__title\">{title}</h1>\r\n        <h2 className=\"modal__description\">{description}</h2>\r\n        <Button onClick={onClick}>OK</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Title from \"../UI/Title/Title\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./RandomZone.css\";\r\n\r\nconst RandomZone = (props) => {\r\n  const { fakeDB } = props;\r\n  const [stateNum, setNumState] = useState(\"เลขที่ออก\");\r\n  const [stateOpenModal, setOpenModalState] = useState(false);\r\n  const [stateIsRandom, setStateIsRandom] = useState(false);\r\n\r\n  const randomInt = useCallback((min, max) => {\r\n    setStateIsRandom(true);\r\n    return Math.ceil(Math.random() * (max - min + 1));\r\n  }, []);\r\n\r\n  const startRandom = () => {\r\n    setNumState(randomInt(1, fakeDB.length));\r\n  };\r\n\r\n  const handleModal = () => {\r\n    setOpenModalState((b) => !b);\r\n    setStateIsRandom(false);\r\n  };\r\n\r\n  let btnStyle = \"\";\r\n  if (stateIsRandom) {\r\n    btnStyle = \"picked\";\r\n  }\r\n\r\n  let title = \"ยังไม่ได้สุ่ม\";\r\n  let msg = \"รอเพื่อนๆพี่ๆน้องๆหนูๆ เลือกอยู่นะ\";\r\n  if (typeof stateNum !== \"string\") {\r\n    msg = `${fakeDB[+stateNum - 1].text}`;\r\n    title = `เลข ${stateNum} !`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {stateOpenModal && <Modal title={title} description={msg} onClick={handleModal} />}\r\n      <div className=\"gameZone\">\r\n        <Title>มาเสี่ยงทายกันเถอะน่า</Title>\r\n        <div className=\"gameZone__btn-Container\">\r\n          <Button onClick={startRandom} style={{ margin: \"0.5rem 1.2rem\" }}>\r\n            สุ่มเลย!\r\n          </Button>\r\n          <Button style={{ margin: \"0.5rem 1.2rem\" }} onClick={handleModal} btnType={btnStyle}>\r\n            ผลลัพธ์\r\n          </Button>\r\n        </div>\r\n        <div className=\"gameZone__result\">\r\n          <Card>{stateNum}</Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomZone;\r\n","import React from \"react\";\r\nimport NavigationBar from \"../components/NavigationBar/MainNav\";\r\nimport RandomZone from \"../components/RandomZone/RandomZone\";\r\n\r\nconst MainPage = (props) => {\r\n  const { fakeDB } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar {...props} />\r\n      <RandomZone fakeDB={fakeDB} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  const { type, value, onChange, id, onClick } = props;\r\n  const inputType = type === \"password\" ? \"password\" : \"text\";\r\n\r\n  return (\r\n    <div className=\"inputCtn\">\r\n      <input\r\n        type={inputType}\r\n        value={value}\r\n        onChange={(e) => onChange(id, e)}\r\n        placeholder=\"กรุณาระบุ\"\r\n        className=\"input\"\r\n      />\r\n      <span className=\"input-span\" onClick={() => onClick(id)}>\r\n        หายไป\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"./Form/Input/Input\";\r\nimport Button from \"./UI/Button/Button\";\r\n\r\nimport \"./OurForm.css\";\r\nimport Modal from \"./Modal/Modal\";\r\n\r\nconst OurForm = (props) => {\r\n  let { fakeDB, setDummyData } = props;\r\n  const textData = fakeDB.map((d) => {\r\n    return { id: d.id, text: d.text };\r\n  });\r\n\r\n  const [formState, setStateForm] = useState(textData);\r\n  const [stateErr, setErrState] = useState(false);\r\n  const [stateSubmit, setSubmitState] = useState(false);\r\n\r\n  const onChange = (id, e) => {\r\n    e.preventDefault();\r\n    const text = e.target.value;\r\n    const newArr = [...formState];\r\n    const index = newArr.findIndex((c) => c.id === id);\r\n    newArr[index].text = text;\r\n    newArr[index].isValid = true;\r\n    setStateForm([...newArr]);\r\n  };\r\n\r\n  const onClick = (id) => {\r\n    const updatedData = formState.filter((c) => c.id !== id);\r\n    if (updatedData.length + 1 === 1) {\r\n      return setErrState(true);\r\n    }\r\n    setStateForm(updatedData);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newDB = [];\r\n    formState.forEach((c) =>\r\n      newDB.push({\r\n        id: c.id,\r\n        text: c.text\r\n      })\r\n    );\r\n    setDummyData(newDB);\r\n    setSubmitState(true);\r\n  };\r\n\r\n  const allData = formState.map((dt) => (\r\n    <Input\r\n      key={dt.id}\r\n      id={dt.id}\r\n      value={dt.text}\r\n      isValid={dt.isValid}\r\n      onChange={onChange}\r\n      onClick={onClick}\r\n    />\r\n  ));\r\n\r\n  const onSetModal = () => {\r\n    setErrState(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDummyData(formState);\r\n  });\r\n\r\n  const onAdd = () => {\r\n    return setStateForm((f, i) =>\r\n      f.concat({ id: Math.random() * new Date().getTime(), text: \"ไฮ ขอบคุณที่สร้างฉัน\" })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {stateSubmit && <Redirect to=\"/\" />}\r\n      {stateErr && (\r\n        <Modal onClick={onSetModal} title=\"เตือนก่อนนะ\" description=\"ต้องเหลืออย่างน้อย 1 ข้อมูล\" />\r\n      )}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <h1 className=\"form-title\">คัสต้อม ค่าแรนด้อม</h1>\r\n        <Button onClick={onAdd}>+</Button>\r\n      </div>\r\n      <form className=\"our-form\" onSubmit={(e) => onSubmit(e)}>\r\n        {allData}\r\n        <button className=\"btn-form\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OurForm;\r\n","import React from \"react\";\r\nimport NavigationBar from \"../components/NavigationBar/MainNav\";\r\nimport OurForm from \"../components/OurForm\";\r\n\r\nconst ConfigPage = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <OurForm fakeDB={props.fakeDB} setDummyData={props.setDummyData} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfigPage;\r\n","export const randomData = [\r\n  { id: \"r1\", text: \"เร็วๆนี้ คุณจะเจอความโชคดีโดยไม่รู้ตัว\" },\r\n  { id: \"r2\", text: \"เร็วๆนี้ อาจมีเรื่องกวนใจเกิดกับคุณ เช่นคุณลืมไรซักอย่าง เช่นลืมตา\" },\r\n  { id: \"r3\", text: \"ลำบากวันนี้ สบายวันหน้า แต่ สบายตอนนี้ ก้สบายเลย\" },\r\n  {\r\n    id: \"r4\",\r\n    text: \"ในอนาคต หากคุณได้ทำช่องยูทูป จะมีคนไปกดไลค์คุณ โดยกดให้ 2 ที ซึ่งคนกดก็คือผมเอง\"\r\n  },\r\n  {\r\n    id: \"r5\",\r\n    text:\r\n      \"นี่คือการทดสอบการแสดงผลของ Modal เท่านั้นเอง หากเห็นข้อความนี้ให้รีบลบด่วน เพราะมันทดสอบเสร็จไปแล้ว\"\r\n  },\r\n  { id: \"r6\", text: \"ขอบคุณที่ยังไม่ลบ หากลบไป อย่าลืมกดเครื่องหมาย + (แล้วเราจะพบกันอีก)\" }\r\n];\r\n","import React, { useRef } from \"react\";\nimport \"./App.css\";\nimport MainPage from \"./pages/MainPage\";\nimport ConfigPage from \"./pages/ConfigPage\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { randomData } from \"./data/randomData\";\n\nconst App = () => {\n  const DUMMY_DATA = useRef([...randomData]);\n\n  const setDummyData = (array) => {\n    DUMMY_DATA.current = [...array];\n  };\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route\n          path={`${process.env.PUBLIC_URL}/setting`}\n          render={(props) => (\n            <ConfigPage fakeDB={DUMMY_DATA.current} {...props} setDummyData={setDummyData} />\n          )}\n        />\n        <Route path=\"/\" render={(props) => <MainPage fakeDB={DUMMY_DATA.current} {...props} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}